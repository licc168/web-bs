<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.licc.dao.persist.UserMapper">

  <resultMap id="BaseResultMap" type="com.licc.dao.po.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="pswd" jdbcType="VARCHAR" property="pswd" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="status" jdbcType="BIGINT" property="status" />
  </resultMap>

  <sql id="Base_Column_List">
    id, nickname, email, pswd, create_time, last_login_time, status
  </sql>

  <select id="page" parameterType="com.licc.common.util.QueryParameters" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from u_user
    <if test="params != null">
      <include refid="exampleCondition" />
    </if>
    <if test="sorts != null">
      <foreach collection="sorts" index="key" item="value" open="order by" separator=",">
        ${key} ${value}
      </foreach>
    </if>
    <if test="page != null">
      limit #{page.from} , #{page.size}
    </if>
  </select>

  <sql id="exampleCondition">
    <where>
      <if test="params.nickname != null">
        and nickname like '%${params.nickname}%'
      </if>
      <if test="params.email != null">
        and email like '%${params.email}%'
      </if>
      <if test="params.pswd != null">
        and pswd like '%${params.pswd}%'
      </if>
      <if test="params.createTime != null">
        and create_time = #{params.createTime}
      </if>
      <if test="params.lastLoginTime != null">
        and last_login_time = #{params.lastLoginTime}
      </if>
      <if test="params.status != null">
        and status = #{params.status}
      </if>
    </where>
  </sql>

  <select id="count" parameterType="com.licc.common.util.QueryParameters" resultType="int">
    select
    count(1)
    from u_user
    <if test="params != null">
      <include refid="exampleCondition" />
    </if>
  </select>

  <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="delete" parameterType="java.lang.Long">
    delete from u_user
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.licc.dao.po.User">
    insert into u_user (id, nickname, email, 
      pswd, create_time, last_login_time, 
      status)
    values (#{id,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{pswd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=BIGINT})
  </insert>

  <insert id="insertSelective" parameterType="com.licc.dao.po.User">
    insert into u_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="pswd != null">
        pswd,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null">
        #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <update id="updateSelective" parameterType="com.licc.dao.po.User">
    update u_user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null">
        pswd = #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="update" parameterType="com.licc.dao.po.User">
    update u_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pswd = #{pswd,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>